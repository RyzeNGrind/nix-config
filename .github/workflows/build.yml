name: "NixOS Build"

on:
  push:
    branches: ["main", "working*"]
  pull_request:
    branches: ["main"]

jobs:
  flake-check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4.1.1
      - uses: cachix/install-nix-action@v23
        with:
          extra_nix_config: |
            experimental-features = nix-command flakes
            access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}
      - uses: cachix/cachix-action@v12
        with:
          name: ryzengrind-nix-config
          authToken: "${{ secrets.CACHIX_AUTH_TOKEN }}"
          skipPush: false
          extraPullNames: nix-community, ryzengrind, daimyo, bopbopbleedem

      - name: Update Flake Inputs
        run: nix flake update

      - name: Check Flake
        run: nix flake check

      - name: Check flake formatting
        run: nix fmt

  build:
    needs: flake-check
    runs-on: ubuntu-latest
    strategy:
      matrix:
        host: [daimyo00]
    steps:
      - uses: actions/checkout@v4.1.1
      - uses: cachix/install-nix-action@v23
        with:
          extra_nix_config: |
            experimental-features = nix-command flakes
            access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}

      - name: Build Configuration
        run: |
          # Test build steps sequentially
          nix build .#nixosConfigurations.${{ matrix.host }}.config.system.build.toplevel --dry-run

      - name: Test Activation Script
        run: |
          nix eval .#nixosConfigurations.${{ matrix.host }}.config.system.build.toplevel.drvPath

  deploy:
    needs: [build]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4.1.1
      - uses: cachix/install-nix-action@v23

      - name: Deploy to Cachix
        run: |
          # Final build check before deployment
          nix build .#nixosConfigurations.daimyo00.config.system.build.toplevel --dry-run
          # Deploy to Cachix
          nix path-info --json \
            .#nixosConfigurations.daimyo00.config.system.build.toplevel | \
            jq -r '.[].path' | \
            xargs nix copy --to "cachix://ryzengrind-nix-config"
        env:
          CACHIX_AUTH_TOKEN: ${{ secrets.CACHIX_AUTH_TOKEN }}
