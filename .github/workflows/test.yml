name: "Test NixOS Configuration"

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  tests:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: cachix/install-nix-action@v25
      with:
        nix_path: nixpkgs=channel:nixos-unstable
        extra_nix_config: |
          experimental-features = nix-command flakes
          access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}
    
    - name: Setup Cachix
      uses: cachix/cachix-action@v14
      with:
        name: nix-config
        authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'

    - name: Check Nix flake
      run: nix flake check

    - name: Run nix-eval-jobs
      run: |
        nix-eval-jobs --gc-roots-dir gcroots --option system x86_64-linux ./. | \
        jq -r 'select(.success == true) | .drvPath' | \
        xargs nix-store --realize

    - name: Run NixOS tests
      run: |
        # Run all tests in parallel
        nix build .#nixosTests.all -L \
          --option system x86_64-linux \
          --option sandbox false \
          --show-trace

    - name: Run specialized profile tests
      run: |
        # Test each profile configuration
        for profile in base gaming dev server; do
          echo "Testing $profile profile..."
          nix build .#nixosTests.$profile -L \
            --option system x86_64-linux \
            --option sandbox false \
            --show-trace
        done

    - name: Run WSL tests
      run: |
        nix build .#nixosTests.wsl -L \
          --option system x86_64-linux \
          --option sandbox false \
          --show-trace

    - name: Run feature flag tests
      run: |
        # Test different feature flag combinations
        nix build .#nixosTests.features -L \
          --option system x86_64-linux \
          --option sandbox false \
          --show-trace

    - name: Run integration tests
      run: |
        # Test profile combinations
        nix build .#nixosTests.integration -L \
          --option system x86_64-linux \
          --option sandbox false \
          --show-trace

    - name: Check documentation
      run: |
        # Verify README files exist in key directories
        for dir in profiles modules/core modules/services modules/hardware; do
          if [ ! -f "$dir/README.md" ]; then
            echo "Missing README.md in $dir"
            exit 1
          fi
        done