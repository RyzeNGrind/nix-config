name: "NixOS Configuration CI"

on:
  push:
    branches: ["main", "working*"]
  pull_request:
    branches: ["main"]

jobs:
  flake-check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4.1.1
      - uses: cachix/install-nix-action@v23
        with:
          extra_nix_config: |
            experimental-features = nix-command flakes
            access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}
      - uses: cachix/cachix-action@v12
        with:
          name: ryzengrind-nix-config
          authToken: "${{ secrets.CACHIX_AUTH_TOKEN }}"
          skipPush: false
          extraPullNames: nix-community, ryzengrind, daimyo, bopbopbleedem

      - name: Update Flake Inputs
        run: nix flake update

      - name: Check Flake
        run: nix flake check

      - name: Check flake formatting
        run: nix fmt

  matrix-test:
    needs: flake-check
    strategy:
      matrix:
        architecture: [x86_64-linux, aarch64-linux]
        profile: [base, dev, gaming, server]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4.1.1
      - uses: cachix/install-nix-action@v23
        with:
          nix_path: nixpkgs=channel:nixos-unstable
          extra_nix_config: |
            experimental-features = nix-command flakes
            access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}
            system = ${{ matrix.architecture }}

      - name: Setup Cachix
        uses: cachix/cachix-action@v14
        with:
          name: ryzengrind-nix-config
          authToken: "${{ secrets.CACHIX_AUTH_TOKEN }}"

      - name: Run architecture tests
        run: |
          nix build .#nixosTests.${{ matrix.profile }}-${{ matrix.architecture }} -L \
            --option system ${{ matrix.architecture }} \
            --option sandbox false \
            --show-trace

  test-configurations:
    needs: matrix-test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        host: [daimyo]
        include:
          - host: daimyo
            test-wsl: true
    steps:
      - uses: actions/checkout@v4.1.1
      - uses: cachix/install-nix-action@v23
        with:
          extra_nix_config: |
            experimental-features = nix-command flakes
            access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}

      - name: Test build process
        run: |
          # Update flake inputs
          nix flake update

          # Check flake configuration
          nix flake check --show-trace

          # Test build steps sequentially
          nix build .#nixosConfigurations.${{ matrix.host }}.config.system.build.toplevel --dry-run

          # Test activation script
          nix eval .#nixosConfigurations.${{ matrix.host }}.config.system.build.toplevel.drvPath

      - name: Test WSL configuration
        if: matrix.test-wsl
        run: |
          # Test NixOS-WSL module loading
          nix eval --json .#nixosConfigurations.${{ matrix.host }}.config.wsl.enable

          # Verify WSL-specific configurations
          nix eval --json .#nixosConfigurations.${{ matrix.host }}.config.environment.systemPackages | grep -q "wslu"
          nix eval --json .#nixosConfigurations.${{ matrix.host }}.config.environment.systemPackages | grep -q "wsl-open"

  cache-test:
    needs: matrix-test
    runs-on: ubuntu-latest
    services:
      localstack:
        image: localstack/localstack
        env:
          SERVICES: s3
        ports:
          - 4566:4566
    steps:
      - uses: actions/checkout@v4.1.1
      - uses: cachix/install-nix-action@v23
        with:
          extra_nix_config: |
            experimental-features = nix-command flakes
            access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}

      - name: Setup test environment
        run: |
          # Create test bucket
          aws --endpoint-url=http://localhost:4566 s3 mb s3://test-cache

      - name: Run cache tests
        run: |
          nix build .#nixosTests.cache -L \
            --option sandbox false \
            --show-trace

      - name: Verify cache contents
        run: |
          aws --endpoint-url=http://localhost:4566 s3 ls s3://test-cache --recursive

  security-scan:
    needs: [test-configurations, cache-test]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4.1.1
      - uses: cachix/install-nix-action@v23

      - name: Run security checks
        run: |
          # Run statix for static analysis
          nix run nixpkgs#statix -- check

          # Run vulnix for vulnerability scanning
          nix run nixpkgs#vulnix -- \
            --system .#nixosConfigurations.daimyo.config.system.build.toplevel

  deploy:
    needs: [security-scan]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4.1.1
      - uses: cachix/install-nix-action@v23

      - name: Deploy configurations
        run: |
          # Final build check before deployment
          nix build .#nixosConfigurations.daimyo.config.system.build.toplevel --dry-run

          # Deploy to Cachix
          nix path-info --json \
            .#nixosConfigurations.daimyo.config.system.build.toplevel | \
            jq -r '.[].path' | \
            xargs nix copy --to "s3://ryzengrind-nix-cache?region=us-east-1"
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
